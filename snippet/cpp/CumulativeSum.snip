snippet CumulativeSum


  template< class T >
  struct CumulativeSum {
    vector< T > data;

    CumulativeSum(int sz) : data(sz, 0) {};

    CumulativeSum(vector< T> v) : data(v.size()+1,0) {rep(i,v.size()) add(i+1,v[i]); build();};

    void add(int k, T x) {
      data[k] += x;
    }

    void build() {
      for(int i = 1; i < data.size(); i++) {
        data[i] += data[i - 1];
      }
    }

    T query(int l,int r) {  // [l,r)
      if(l < 0) return (0);
      return (data[min(r,(int)data.size()-1)]-data[min(l,(int)data.size()-1)]);
    }
  };


