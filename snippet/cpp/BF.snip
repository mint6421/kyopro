snippet BF



  template< typename T >
  vector< T > bellman_ford(Edges< T > &edges, int V, int s) {
    const auto lim = numeric_limits< T >::max();
    vector< T > dist(V, lim);
    dist[s] = 0;
    rep(i,V-1) {
      for(auto &e : edges) {
        if(dist[e.src] == lim) continue;
        dist[e.to] = min(dist[e.to], dist[e.src] + e.cost);
      }
    }     
  for(auto &e : edges) {
      if(dist[e.src] == lim) continue;
      if(dist[e.src] + e.cost < dist[e.to]) return vector< T >();
    }
    return dist;

  }

