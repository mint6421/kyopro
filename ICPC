
#include<bits/stdc++.h>
using namespace std;
#define inf 1000000000
#define INF 1000000000000000
#define ll long long
#define ull unsigned long long
#define M (int)(1e9+7)
#define P pair<int,int>
#define PLL pair<ll,ll>
#define FOR(i,m,n) for(int i=(int)m;i<(int)n;i++)
#define RFOR(i,m,n) for(int i=(int)m;i>=(int)n;i--)
#define rep(i,n) FOR(i,0,n)
#define rrep(i,n) RFOR(i,n,0)
#define all(a) a.begin(),a.end()
#define IN(a,n) rep(i,n){ cin>>a[i]; }
const int vx[4] = {0,1,0,-1};
const int vy[4] = {1,0,-1,0};
#define PI 3.14159265
#define F first
#define S second
#define PB push_back
#define EB emplace_back
#define int ll
void init(){
  cin.tie(0);
  ios::sync_with_stdio(false);
}



template< typename T >
struct edge {
  int src, to;
  T cost;

  edge(int to, T cost) : src(-1), to(to), cost(cost) {}

  edge(int src, int to, T cost) : src(src), to(to), cost(cost) {}

  edge &operator=(const int &x) {
    to = x;
    return *this;
  }

  operator int() const { return to; }
};

template< typename T >
using Edges = vector< edge< T > >;
template< typename T >
using WG = vector< Edges< T > >;
using UG = vector< vector< int > >;
template< typename T >
using Matrix = vector< vector< T > >;

bool flag;

void dfs(int x,int y,int b[],UG es){


  for(auto e:es[x]){
    if(e==y) continue;
    if(b[e]==0){
      b[e]=-1*b[x];
      dfs(e,x,b,es);
    }else if(b[x]*b[e]!=-1){
     
      flag=false;
    }
  }

 }

void f(int n,int m){
  int b[1100]={};
  flag= true;
  UG es(n);
  rep(i,m){
    int x,y;
    cin>>x>>y;
    x--;y--;
    es[x].PB(y);
    es[y].PB(x);
  }
  b[0]=1;
  dfs(0,-1,b,es);

  if(!flag){
    cout<<0<<endl;
  }else{
    int x=0,y=0;
    rep(i,n){
      if(b[i]==1) x++;
      else if(b[i]==-1) y++;
    }
//    cout<<" "<<x<<' '<<y<<endl;
    if(x%2&&y%2){
      cout<<0<<endl;
    }else if(y%2){
      cout<<1<<endl;
      cout<<x/2<<endl;
    }else if(x%2){
      cout<<1<<endl;
      cout<<y/2<<endl;
    }else{

      cout<<1+(x!=y)<<endl;
      cout<<min(x/2,y/2)<<endl;
      if(x!=y)
        cout<<max(x/2,y/2)<<endl;
    }
  }

}


main(){
  int n,m;
  
  while(true){
    cin>>n>>m;
    if(n==0) break;
    f(n,m);
  }
}
